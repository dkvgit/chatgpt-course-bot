from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

BOT_TOKEN = "7376438241:AAG9hmZKKZJ38le5m6Pk7DjDjwMNWed9l5A"
CHANNEL_LINK = "https://t.me/ai_chatgpt_course_bot"

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üîç –û –∫—É—Ä—Å–µ", callback_data="about")],
        [InlineKeyboardButton("üéì –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="buy")],
        [InlineKeyboardButton("üì¶ –ü—Ä–∏–º–µ—Ä—ã", callback_data="demo")]
    ]
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∫—É—Ä—Å ChatGPT –¥–ª—è –≤—Å–µ—Ö üëá", reply_markup=InlineKeyboardMarkup(keyboard))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "about":
        await query.edit_message_text("üí° –≠—Ç–æ—Ç –∫—É—Ä—Å –Ω–∞—É—á–∏—Ç —Ç–µ–±—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ò–ò: –ø—Ä–æ—Å—Ç–æ, —Å —é–º–æ—Ä–æ–º –∏ –ø–æ –¥–µ–ª—É.\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 990‚ÇΩ.")
    elif query.data == "buy":
        keyboard = [[InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="paid")]]
        await query.edit_message_text(
            "–ü–µ—Ä–µ–≤–µ–¥–∏ 990‚ÇΩ –Ω–∞ –∫–∞—Ä—Ç—É 1234 5678 9012 3456\n–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ '–Ø –æ–ø–ª–∞—Ç–∏–ª'",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    elif query.data == "paid":
        await query.edit_message_text(f"–°–ø–∞—Å–∏–±–æ! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫—É—Ä—Å:\n{CHANNEL_LINK}")
    elif query.data == "demo":
        await query.edit_message_text("–û—Ç–∫—Ä—ã—Ç—ã–π —É—Ä–æ–∫: https://t.me/neuronica_news/1")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    print(">>> –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ (polling)")
    app.run_polling()
