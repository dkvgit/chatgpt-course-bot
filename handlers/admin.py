from telegram import Update
from telegram.ext import ContextTypes
from utils.access import save_paid_users

PAID_USERS = None
OWNER_ID = 5425101564

def set_paid_users(users_set):
    global PAID_USERS
    PAID_USERS = users_set

async def grant(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("üõ† grant() –ó–ê–ü–£–©–ï–ù")
    print("PAID_USERS =", PAID_USERS)

    if update.message.from_user.id != OWNER_ID:
        await update.message.reply_text("‚õîÔ∏è –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    if not context.args:
        await update.message.reply_text("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /grant 12345678")
        return

    try:
        target_id = int(context.args[0])
        print(f"üëâ –î–æ–±–∞–≤–ª—è–µ–º ID {target_id} –≤ PAID_USERS")

        PAID_USERS.add(target_id)
        print(f"‚úÖ –¢–µ–ø–µ—Ä—å PAID_USERS: {PAID_USERS}")

        save_paid_users(PAID_USERS)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞:
        try:
            with open("paid_users.json") as f:
                print("üìÇ paid_users.json =", f.read())
        except Exception as e:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª:", e)

        await update.message.reply_text(f"‚úÖ –î–æ—Å—Ç—É–ø –≤—ã–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_id}")

        try:
            await context.bot.send_message(
                chat_id=target_id,
                text="‚úÖ –°–ø–∞—Å–∏–±–æ! –î–æ—Å—Ç—É–ø –∫ –ø–æ–ª–Ω–æ–º—É –∫—É—Ä—Å—É –æ—Ç–∫—Ä—ã—Ç. –ù–∞–ø–∏—à–∏ /menu —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."
            )
        except Exception as e:
            await update.message.reply_text(f"‚ö†Ô∏è –î–æ—Å—Ç—É–ø –≤—ã–¥–∞–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")

    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
