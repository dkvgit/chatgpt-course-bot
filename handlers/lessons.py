# handlers/lessons.py

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes
from lessons_data import LESSONS

async def handle_step(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data
    chat_id = query.message.chat.id

    if data == "step_0":
        context.user_data["step"] = 1
        lesson = LESSONS["lesson_0"]
        await context.bot.send_video(chat_id=chat_id, video=lesson["file_id"], caption=lesson['title'])
        await context.bot.send_message(chat_id=chat_id, text="–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ö—Ä—É—Ç–æ! –î–µ—Ä–∂–∏—Ç–µ –£—Ä–æ–∫ 1.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üëâ –î–∞–ª—å—à–µ", callback_data="step_1")]]))

    elif data == "step_1":
        context.user_data["step"] = 2
        lesson = LESSONS["lesson_1"]
        await context.bot.send_video(chat_id=chat_id, video=lesson["file_id"], caption=lesson['title'])
        await context.bot.send_message(chat_id=chat_id, text="–ü–æ—Å–º–æ—Ç—Ä–µ–ª–∏ 1 –£—Ä–æ–∫? –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üëâ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="step_2")]]))

    elif data == "step_2":
        context.user_data["step"] = 3
        await context.bot.send_message(chat_id=chat_id,
            text="–í–∏–∂—É –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å. –ü–µ—Ä–≤—ã–µ –¥–≤–∞ –≤–∏–¥–µ–æ –±—ã–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º–∏. –ü—Ä–∏–æ–±—Ä–µ—Ç–∞–π—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üí≥ –ö—É–ø–∏—Ç—å –º–∏–Ω–∏ –∫—É—Ä—Å", callback_data="buy")],
                [InlineKeyboardButton("‚ùå –ù–µ —Ö–æ—á—É –ø–æ–∫—É–ø–∞—Ç—å", callback_data="not_ready")]
            ]))
