# handlers/lessons.py
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes
from lessons_data import LESSONS
from datetime import datetime

async def log_lesson_access(user_id, lesson_id, username):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É—Ä–æ–∫–∞"""
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    print(f"üìä –£—Ä–æ–∫ {lesson_id} –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω: ID {user_id} (@{username}) –≤ {timestamp}")

async def send_protected_lesson(context, chat_id, lesson_key, user_id, username):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É—Ä–æ–∫–∞ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"""
    lesson = LESSONS[lesson_key]
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
    personalized_title = f"{lesson['title']}\n\nüë§ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: @{username}\nüÜî ID: {user_id}"
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å –∑–∞—â–∏—Ç–æ–π
    await context.bot.send_video(
        chat_id=chat_id, 
        video=lesson["file_id"], 
        caption=personalized_title,
        protect_content=True,  # üîê –ó–∞–ø—Ä–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∏
        has_spoiler=False
    )
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    await log_lesson_access(user_id, lesson_key, username)

async def handle_step(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data
    chat_id = query.message.chat.id
    user_id = query.from_user.id
    username = query.from_user.username or "–±–µ–∑_username"
    
    if data == "step_0":
        context.user_data["step"] = 1
        await send_protected_lesson(context, chat_id, "lesson_0", user_id, username)
        await context.bot.send_message(
            chat_id=chat_id, 
            text="–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ö—Ä—É—Ç–æ! –î–µ—Ä–∂–∏—Ç–µ –£—Ä–æ–∫ 1.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üëâ –î–∞–ª—å—à–µ", callback_data="step_1")]])
        )
    
    elif data == "step_1":
        context.user_data["step"] = 2
        await send_protected_lesson(context, chat_id, "lesson_1", user_id, username)
        await context.bot.send_message(
            chat_id=chat_id, 
            text="–ü–æ—Å–º–æ—Ç—Ä–µ–ª–∏ 1 –£—Ä–æ–∫? –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üëâ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="step_2")]])
        )
    
    elif data == "step_2":
        context.user_data["step"] = 3
        await context.bot.send_message(
            chat_id=chat_id,
            text="–í–∏–∂—É –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å. –ü–µ—Ä–≤—ã–µ –¥–≤–∞ –≤–∏–¥–µ–æ –±—ã–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º–∏. –ü—Ä–∏–æ–±—Ä–µ—Ç–∞–π—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.",
            protect_content=True,  # üîê –ó–∞—â–∏—Ç–∞ —Ç–µ–∫—Å—Ç–∞
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üí≥ –ö—É–ø–∏—Ç—å –º–∏–Ω–∏ –∫—É—Ä—Å", callback_data="buy")],
                [InlineKeyboardButton("‚ùå –ù–µ —Ö–æ—á—É –ø–æ–∫—É–ø–∞—Ç—å", callback_data="not_ready")]
            ])
        )
