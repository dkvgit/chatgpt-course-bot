from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
PAID_USERS = set()
from handlers.menu import set_paid_users

# === /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id

    # üîê –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –¥–æ—Å—Ç—É–ø–æ–º ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É
    if user_id in PAID_USERS:
        await update.message.reply_text(
            "‚úÖ –£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —É—Ä–æ–∫–∞–º! üëá",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üìö –ü–µ—Ä–µ–π—Ç–∏ –∫ —É—Ä–æ–∫–∞–º", callback_data="go_paid_menu")]
            ])
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—É—Å–∫–∞, –µ—Å–ª–∏ –±—ã–ª
    args = context.args
    source = args[0] if args else "direct"

    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ —á–µ—Ä–µ–∑: {source}")
    context.user_data["step"] = 0
    context.user_data["source"] = source

    # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤
    welcome_text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏–Ω–∏-–∫—É—Ä—Å ¬´–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –±–µ–∑ –ø–∞–Ω–∏–∫–∏¬ª!\n\n"
        "–¢—ã –º–æ–∂–µ—à—å —Å—Ä–∞–∑—É –Ω–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É."
    )

    await update.message.reply_text(
        welcome_text,
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üëâ –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ", callback_data="step_0")],
            [InlineKeyboardButton("üìö –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞", callback_data="show_program")],
            [InlineKeyboardButton("üí≥ –°—Ä–∞–∑—É –æ–ø–ª–∞—Ç–∏—Ç—å", callback_data="buy")]
        ])
    )
